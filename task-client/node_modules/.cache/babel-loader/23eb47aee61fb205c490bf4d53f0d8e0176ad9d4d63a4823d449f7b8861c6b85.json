{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodjsProjet\\\\task-client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message);\n      navigate('/login');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"auth-form\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formData.username,\n      onChange: e => setFormData({\n        ...formData,\n        username: e.target.value\n      }),\n      placeholder: \"Username\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: formData.email,\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      }),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: formData.password,\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      }),\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"q1R+E95aC2xNGfJoz+/iDkOfOyQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","err","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["D:/nodjsProjet/task-client/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/auth/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) throw new Error(data.message);\r\n            navigate('/login');\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n            {error && <div className=\"error\">{error}</div>}\r\n            <input\r\n                type=\"text\"\r\n                value={formData.username}\r\n                onChange={(e) => setFormData({...formData, username: e.target.value})}\r\n                placeholder=\"Username\"\r\n                required\r\n            />\r\n            <input\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n                placeholder=\"Email\"\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n                placeholder=\"Password\"\r\n                required\r\n            />\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}