{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodjsProjet\\\\task-client\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSocket } from '../services/socketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n    const socket = getSocket();\n    socket.on('taskCreated', task => {\n      setTasks(prev => [task, ...prev]);\n    });\n    socket.on('taskAccepted', updatedTask => {\n      setTasks(prev => prev.map(task => task._id === updatedTask._id ? updatedTask : task));\n    });\n    socket.on('taskRejected', updatedTask => {\n      setTasks(prev => prev.map(task => task._id === updatedTask._id ? updatedTask : task));\n    });\n    socket.on('taskStatusUpdated', updatedTask => {\n      setTasks(prev => prev.map(task => task._id === updatedTask._id ? updatedTask : task));\n    });\n    return () => {\n      socket.off('taskCreated');\n      socket.off('taskAccepted');\n      socket.off('taskRejected');\n      socket.off('taskStatusUpdated');\n    };\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/tasks', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n      const data = await response.json();\n      setTasks(data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAccept = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/accept`, {\n        method: 'PATCH',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to accept task');\n      const updatedTask = await response.json();\n      setTasks(prev => prev.map(task => task._id === updatedTask._id ? updatedTask : task));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleReject = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/reject`, {\n        method: 'PATCH',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to reject task');\n      const updatedTask = await response.json();\n      setTasks(prev => prev.map(task => task._id === updatedTask._id ? updatedTask : task));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-card ${task.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status\",\n          children: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), task.status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAccept(task._id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReject(task._id),\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getSocket","jsxDEV","_jsxDEV","AdminDashboard","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","socket","on","task","prev","updatedTask","map","_id","off","response","fetch","headers","localStorage","getItem","ok","Error","data","json","err","message","handleAccept","taskId","method","handleReject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","title","description","onClick","_c","$RefreshReg$"],"sources":["D:/nodjsProjet/task-client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getSocket } from '../services/socketService';\r\n\r\nconst AdminDashboard = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n        const socket = getSocket();\r\n\r\n        socket.on('taskCreated', (task) => {\r\n            setTasks(prev => [task, ...prev]);\r\n        });\r\n\r\n        socket.on('taskAccepted', (updatedTask) => {\r\n            setTasks(prev => prev.map(task => \r\n                task._id === updatedTask._id ? updatedTask : task\r\n            ));\r\n        });\r\n\r\n        socket.on('taskRejected', (updatedTask) => {\r\n            setTasks(prev => prev.map(task => \r\n                task._id === updatedTask._id ? updatedTask : task\r\n            ));\r\n        });\r\n\r\n        socket.on('taskStatusUpdated', (updatedTask) => {\r\n            setTasks(prev => prev.map(task => \r\n                task._id === updatedTask._id ? updatedTask : task\r\n            ));\r\n        });\r\n\r\n        return () => {\r\n            socket.off('taskCreated');\r\n            socket.off('taskAccepted');\r\n            socket.off('taskRejected');\r\n            socket.off('taskStatusUpdated');\r\n        };\r\n    }, []);\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch('http://localhost:5000/api/tasks', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            if (!response.ok) throw new Error('Failed to fetch tasks');\r\n            const data = await response.json();\r\n            setTasks(data);\r\n            setError(null);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAccept = async (taskId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/accept`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            if (!response.ok) throw new Error('Failed to accept task');\r\n            const updatedTask = await response.json();\r\n            setTasks(prev => prev.map(task => \r\n                task._id === updatedTask._id ? updatedTask : task\r\n            ));\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handleReject = async (taskId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/reject`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            if (!response.ok) throw new Error('Failed to reject task');\r\n            const updatedTask = await response.json();\r\n            setTasks(prev => prev.map(task => \r\n                task._id === updatedTask._id ? updatedTask : task\r\n            ));\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    if (loading) return <div className=\"loading\">Loading tasks...</div>;\r\n    if (error) return <div className=\"error\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n            <h2>Admin Dashboard</h2>\r\n            <div className=\"task-list\">\r\n                {tasks.map(task => (\r\n                    <div key={task._id} className={`task-card ${task.status}`}>\r\n                        <h3>{task.title}</h3>\r\n                        <p>{task.description}</p>\r\n                        <span className=\"status\">{task.status}</span>\r\n                        {task.status === 'pending' && (\r\n                            <div className=\"task-actions\">\r\n                                <button onClick={() => handleAccept(task._id)}>Accept</button>\r\n                                <button onClick={() => handleReject(task._id)}>Reject</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}