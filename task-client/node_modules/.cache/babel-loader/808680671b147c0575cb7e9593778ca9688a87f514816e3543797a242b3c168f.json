{"ast":null,"code":"var _jsxFileName = \"d:\\\\nodjsProjet\\\\task-client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSocket } from '../services/socketService';\nimport './TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('date');\n  useEffect(() => {\n    fetchTasks();\n    const socket = getSocket();\n    socket.on('taskCreated', task => {\n      setTasks(prev => [task, ...prev]);\n    });\n    socket.on('taskUpdated', updatedTask => {\n      setTasks(prev => prev.map(task => task._id === updatedTask._id ? updatedTask : task));\n    });\n    socket.on('taskDeleted', taskId => {\n      setTasks(prev => prev.filter(task => task._id !== taskId));\n    });\n    return () => {\n      socket.off('taskCreated');\n      socket.off('taskUpdated');\n      socket.off('taskDeleted');\n    };\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/tasks', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n      const data = await response.json();\n      setTasks(data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filteredAndSortedTasks = tasks.filter(task => filter === 'all' ? true : task.status === filter).sort((a, b) => {\n    if (sortBy === 'date') return new Date(b.createdAt) - new Date(a.createdAt);\n    return a.title.localeCompare(b.title);\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"en cours\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"termin\\xE9\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"annul\\xE9\",\n          children: \"Cancelled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"Sort by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Sort by Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), filteredAndSortedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-card ${task.status}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status\",\n        children: task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, task._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"q8vIQzdKzBcTOJbhy/eHO/XL1MA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","getSocket","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","error","setError","filter","setFilter","sortBy","setSortBy","fetchTasks","socket","on","task","prev","updatedTask","map","_id","taskId","off","response","fetch","headers","localStorage","getItem","ok","Error","data","json","err","message","filteredAndSortedTasks","status","sort","a","b","Date","createdAt","title","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","description","_c","$RefreshReg$"],"sources":["d:/nodjsProjet/task-client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getSocket } from '../services/socketService';\r\nimport './TaskList.css';\r\n\r\nconst TaskList = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [filter, setFilter] = useState('all');\r\n    const [sortBy, setSortBy] = useState('date');\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n        const socket = getSocket();\r\n        \r\n        socket.on('taskCreated', (task) => {\r\n            setTasks(prev => [task, ...prev]);\r\n        });\r\n\r\n        socket.on('taskUpdated', (updatedTask) => {\r\n            setTasks(prev => prev.map(task => \r\n                task._id === updatedTask._id ? updatedTask : task\r\n            ));\r\n        });\r\n\r\n        socket.on('taskDeleted', (taskId) => {\r\n            setTasks(prev => prev.filter(task => task._id !== taskId));\r\n        });\r\n\r\n        return () => {\r\n            socket.off('taskCreated');\r\n            socket.off('taskUpdated');\r\n            socket.off('taskDeleted');\r\n        };\r\n    }, []);\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch('http://localhost:5000/api/tasks', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            if (!response.ok) throw new Error('Failed to fetch tasks');\r\n            const data = await response.json();\r\n            setTasks(data);\r\n            setError(null);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const filteredAndSortedTasks = tasks\r\n        .filter(task => filter === 'all' ? true : task.status === filter)\r\n        .sort((a, b) => {\r\n            if (sortBy === 'date') return new Date(b.createdAt) - new Date(a.createdAt);\r\n            return a.title.localeCompare(b.title);\r\n        });\r\n\r\n    if (loading) return <div className=\"loading\">Loading tasks...</div>;\r\n    if (error) return <div className=\"error\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"task-list\">\r\n            <div className=\"task-controls\">\r\n                <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n                    <option value=\"all\">All Tasks</option>\r\n                    <option value=\"en cours\">In Progress</option>\r\n                    <option value=\"terminé\">Completed</option>\r\n                    <option value=\"annulé\">Cancelled</option>\r\n                </select>\r\n                <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\r\n                    <option value=\"date\">Sort by Date</option>\r\n                    <option value=\"title\">Sort by Title</option>\r\n                </select>\r\n            </div>\r\n            {filteredAndSortedTasks.map(task => (\r\n                <div key={task._id} className={`task-card ${task.status}`}>\r\n                    <h3>{task.title}</h3>\r\n                    <p>{task.description}</p>\r\n                    <span className=\"status\">{task.status}</span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}